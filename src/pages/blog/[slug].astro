---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { Comments } from "../../components/comments/Comments";
import { Likes } from "../../components/islands/Likes";

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const { title, pubDate, description, modDate, atprotoURI } = entry.data;
---


<BaseLayout title={title} description={description}>
  <section
    slot="top"
    class="w-full flex flex-col items-center text-center text-gray-900 dark:text-gray-50"
  >
    <h1
      class="pb-4 px-4 text-5xl font-shortstack max-w-[25ch]"
    >{title}</h1>
    <div class="flex flex-row gap-6">{
      pubDate && (
        <time class="text-stone-600 dark:text-stone-400">
          {new Date(pubDate).toLocaleDateString("en-us", {
            year: "numeric",
            month: "short",
            day: "numeric",
          })}
        </time>
      )
    }
    <Likes
      client:load
      client:only="solid-js"
      collection="blog"
      slug={entry.slug}
    />
  </div>
    {
      modDate && (
        <div>
          Last updated on{" "}
          <time>
            {new Date(modDate).toLocaleDateString("en-us", {
              year: "numeric",
              month: "short",
              day: "numeric",
            })}
          </time>
        </div>
      )
    }
  </section>
  <article slot="content" id="blog-post" class="grid auto-cols-fr justify-start w-full max-w-3xl">
    <Content />
  </article>
  {atprotoURI && <div
    slot="content"
    class="grid auto-cols-fr justify-start w-full max-w-3xl mt-8">
    <Comments
      client:load
      client:only="solid-js"
      handle="snorre.io"
      atprotoURI={atprotoURI} />
    </div>}
</BaseLayout>

<style is:global>
#blog-post {
  @apply text-stone-900 dark:text-stone-50 w-full;

  h1, h2, h3, h4, h5, h6 {
    @apply font-shortstack;
    margin: 1em 0 0.5em;
  }

  h2 {
    @apply text-3xl;
  }

  h3 {
    @apply text-2xl;
  }

  h4 {
    @apply text-xl;
  }

  h5 {
    @apply text-lg;
  }

  p {
    margin: 1em 0 0.5em;
  }

  pre {
    @apply rounded-lg mx-0 my-4 px-4 py-8 drop-shadow max-w-full self-center;

  }

  img  {
    @apply rounded-lg drop-shadow self-center inline-flex;
  }

  Image {
    @apply w-fit justify-self-center;
  }

  a {
    @apply underline underline-offset-2 font-shortstack;
  }


  ul, ol {
    max-width: 70ch;
  }

  li {
    @apply ml-4;
  }

  ol li {
    @apply list-decimal;
  }

  ul li {
    @apply list-disc;
  }

  blockquote {
    @apply border-l-4 border-stone-600 dark:border-stone-400 pl-4 my-4;
    p {
      @apply my-0;
    }
  }

  table {
    @apply w-full my-4;
    border-collapse: collapse;
  }

  th, td {
    @apply border-b border-stone-400 dark:border-stone-600 px-4 py-2;
  }

  th {
    @apply bg-stone-100 dark:bg-stone-800 text-left;
  }

  button {
    @apply bg-stone-300 dark:bg-stone-700 text-stone-900 dark:text-stone-50 rounded-lg px-4 py-2 my-2;
  
    &:hover {
      @apply bg-stone-400 dark:bg-stone-600;
    }

    &:focus {
      @apply bg-stone-400 dark:bg-stone-600;
    }

    &:active {
      @apply bg-stone-500 dark:bg-stone-500;
    }
  }

  canvas {
    @apply w-full border-2 border-stone-300 dark:border-stone-700 scroll-my-80;
    aspect-ratio: 16/9;
  }

  input {
    @apply bg-stone-100 dark:bg-stone-900 text-stone-600 dark:text-stone-300 rounded-lg px-4 py-2 w-fit;
  }

}
</style>

